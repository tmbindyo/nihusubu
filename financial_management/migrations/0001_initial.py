# Generated by Django 5.0.3 on 2024-03-15 17:19

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('file', models.FileField(upload_to='attachments/', verbose_name='File')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Budget',
                'verbose_name_plural': 'Budgets',
            },
        ),
        migrations.CreateModel(
            name='CashFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpenseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ratio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('formula', models.TextField(verbose_name='Formula')),
                ('category', models.CharField(choices=[('liquidity', 'Liquidity'), ('profitability', 'Profitability'), ('leverage', 'Leverage'), ('efficiency', 'Efficiency'), ('market_value', 'Market Value'), ('growth', 'Growth'), ('coverage', 'Coverage'), ('turnover', 'Turnover'), ('other', 'Other')], max_length=100, verbose_name='Category')),
                ('source', models.CharField(choices=[('financial_statements', 'Financial Statements'), ('industry_benchmarks', 'Industry Benchmarks'), ('external_sources', 'External Sources'), ('other', 'Other')], max_length=100, verbose_name='Source')),
                ('frequency', models.CharField(choices=[('quarterly', 'Quarterly'), ('annually', 'Annually'), ('monthly', 'Monthly'), ('other', 'Other')], max_length=50, verbose_name='Frequency')),
                ('benchmark', models.CharField(blank=True, max_length=100, null=True, verbose_name='Benchmark')),
                ('ideal_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ideal Range')),
            ],
            options={
                'verbose_name': 'Ratio',
                'verbose_name_plural': 'Ratios',
            },
        ),
        migrations.CreateModel(
            name='RevenueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrendAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('analysis_type', models.CharField(choices=[('revenue', 'Revenue Trends'), ('expense', 'Expense Trends'), ('profit', 'Profit Trends'), ('cash_flow', 'Cash Flow Trends')], max_length=50, verbose_name='Analysis Type')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('data', models.JSONField(verbose_name='Data')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Trend Analysis',
                'verbose_name_plural': 'Trend Analyses',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('account_type', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('revenue', 'Revenue'), ('expense', 'Expense')], max_length=20, verbose_name='Type')),
                ('account_number', models.CharField(max_length=20, verbose_name='Number')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Balance')),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Opening Balance')),
                ('country_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts_country_currenct', to='authentication.country')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BudgetLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.budget')),
            ],
            options={
                'verbose_name': 'Budget Line',
                'verbose_name_plural': 'Budget Lines',
            },
        ),
        migrations.CreateModel(
            name='BudgetRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('revision_date', models.DateField(auto_now_add=True, verbose_name='Revision Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.budget', verbose_name='Budget')),
                ('revised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.user', verbose_name='Revised By')),
            ],
            options={
                'verbose_name': 'Budget Revision',
                'verbose_name_plural': 'Budget Revisions',
            },
        ),
        migrations.AddField(
            model_name='budget',
            name='cash_flows',
            field=models.ManyToManyField(blank=True, to='financial_management.cashflow', verbose_name='Cash Flows'),
        ),
        migrations.AddField(
            model_name='budget',
            name='expense_items',
            field=models.ManyToManyField(blank=True, to='financial_management.expenseitem', verbose_name='Expense Items'),
        ),
        migrations.CreateModel(
            name='FinancialStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('type', models.CharField(choices=[('balance_sheet', 'Balance Sheet'), ('income_statement', 'Income Statement'), ('cash_flow_statement', 'Cash Flow Statement')], max_length=20, verbose_name='Type')),
                ('period_covered_start', models.DateField(blank=True, null=True, verbose_name='Period Covered Start')),
                ('period_covered_end', models.DateField(blank=True, null=True, verbose_name='Period Covered End')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference Number')),
                ('country_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_statement_country_currenct', to='authentication.country')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
            ],
            options={
                'verbose_name': 'Financial Statement',
                'verbose_name_plural': 'Financial Statements',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAccount',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('account_type', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('revenue', 'Revenue'), ('expense', 'Expense')], max_length=20, verbose_name='Type')),
                ('account_number', models.CharField(max_length=20, verbose_name='Number')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Balance')),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Opening Balance')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country_currency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.country')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.user')),
            ],
            options={
                'verbose_name': 'historical account',
                'verbose_name_plural': 'historical accounts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAttachment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('file', models.TextField(max_length=100, verbose_name='File')),
                ('uploaded_at', models.DateTimeField(blank=True, editable=False, verbose_name='Uploaded At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical attachment',
                'verbose_name_plural': 'historical attachments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBudget',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Budget',
                'verbose_name_plural': 'historical Budgets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBudgetLine',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('budget', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.budget')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Budget Line',
                'verbose_name_plural': 'historical Budget Lines',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBudgetRevision',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('revision_date', models.DateField(blank=True, editable=False, verbose_name='Revision Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('budget', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.budget', verbose_name='Budget')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('revised_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.user', verbose_name='Revised By')),
            ],
            options={
                'verbose_name': 'historical Budget Revision',
                'verbose_name_plural': 'historical Budget Revisions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCashFlow',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical cash flow',
                'verbose_name_plural': 'historical cash flows',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExpenseItem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical expense item',
                'verbose_name_plural': 'historical expense items',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFinancialStatement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('type', models.CharField(choices=[('balance_sheet', 'Balance Sheet'), ('income_statement', 'Income Statement'), ('cash_flow_statement', 'Cash Flow Statement')], max_length=20, verbose_name='Type')),
                ('period_covered_start', models.DateField(blank=True, null=True, verbose_name='Period Covered Start')),
                ('period_covered_end', models.DateField(blank=True, null=True, verbose_name='Period Covered End')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference Number')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country_currency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.country')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
            ],
            options={
                'verbose_name': 'historical Financial Statement',
                'verbose_name_plural': 'historical Financial Statements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJournal',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('journal_type', models.CharField(choices=[('sales', 'Sales Journal'), ('purchase', 'Purchase Journal'), ('cash_receipts', 'Cash Receipts Journal'), ('cash_disbursements', 'Cash Disbursements Journal')], max_length=20, verbose_name='Journal Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
            ],
            options={
                'verbose_name': 'historical Journal',
                'verbose_name_plural': 'historical Journals',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRatio',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('formula', models.TextField(verbose_name='Formula')),
                ('category', models.CharField(choices=[('liquidity', 'Liquidity'), ('profitability', 'Profitability'), ('leverage', 'Leverage'), ('efficiency', 'Efficiency'), ('market_value', 'Market Value'), ('growth', 'Growth'), ('coverage', 'Coverage'), ('turnover', 'Turnover'), ('other', 'Other')], max_length=100, verbose_name='Category')),
                ('source', models.CharField(choices=[('financial_statements', 'Financial Statements'), ('industry_benchmarks', 'Industry Benchmarks'), ('external_sources', 'External Sources'), ('other', 'Other')], max_length=100, verbose_name='Source')),
                ('frequency', models.CharField(choices=[('quarterly', 'Quarterly'), ('annually', 'Annually'), ('monthly', 'Monthly'), ('other', 'Other')], max_length=50, verbose_name='Frequency')),
                ('benchmark', models.CharField(blank=True, max_length=100, null=True, verbose_name='Benchmark')),
                ('ideal_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ideal Range')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Ratio',
                'verbose_name_plural': 'historical Ratios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('report_type', models.CharField(choices=[('balance_sheet', 'Balance Sheet'), ('income_statement', 'Income Statement'), ('cash_flow_statement', 'Cash Flow Statement'), ('financial_ratios', 'Financial Ratios')], max_length=50, verbose_name='Type')),
                ('date_generated', models.DateField(blank=True, editable=False, verbose_name='Date Generated')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference Number')),
                ('period_covered_start', models.DateField(blank=True, null=True, verbose_name='Period Covered (Start)')),
                ('period_covered_end', models.DateField(blank=True, null=True, verbose_name='Period Covered (End)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
            ],
            options={
                'verbose_name': 'historical report',
                'verbose_name_plural': 'historical reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReportTemplate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('last_updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Last Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('header_text', models.TextField(blank=True, null=True, verbose_name='Header Text')),
                ('footer_text', models.TextField(blank=True, null=True, verbose_name='Footer Text')),
                ('income_statement_section', models.TextField(blank=True, null=True, verbose_name='Income Statement Section')),
                ('balance_sheet_section', models.TextField(blank=True, null=True, verbose_name='Balance Sheet Section')),
                ('revenue_field', models.CharField(blank=True, max_length=100, null=True, verbose_name='Revenue Field')),
                ('expenses_field', models.CharField(blank=True, max_length=100, null=True, verbose_name='Expenses Field')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.user', verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
            ],
            options={
                'verbose_name': 'historical Report Template',
                'verbose_name_plural': 'historical Report Templates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRevenueItem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical revenue item',
                'verbose_name_plural': 'historical revenue items',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTrendAnalysis',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('analysis_type', models.CharField(choices=[('revenue', 'Revenue Trends'), ('expense', 'Expense Trends'), ('profit', 'Profit Trends'), ('cash_flow', 'Cash Flow Trends')], max_length=50, verbose_name='Analysis Type')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('data', models.JSONField(verbose_name='Data')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Trend Analysis',
                'verbose_name_plural': 'historical Trend Analyses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTrialBalance',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Balance')),
                ('debit_balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Debit Balance')),
                ('credit_balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Credit Balance')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.account')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
            ],
            options={
                'verbose_name': 'historical trial balance',
                'verbose_name_plural': 'historical trial balances',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVarianceAnalysis',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('analysis_date', models.DateField(verbose_name='Analysis Date')),
                ('actual_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Actual Amount')),
                ('expected_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Expected Amount')),
                ('variance_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Variance Amount')),
                ('variance_percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Variance Percentage')),
                ('analysis_notes', models.TextField(blank=True, verbose_name='Analysis Notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('budget', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.budget')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Variance Analysis',
                'verbose_name_plural': 'historical Variance Analyses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('journal_type', models.CharField(choices=[('sales', 'Sales Journal'), ('purchase', 'Purchase Journal'), ('cash_receipts', 'Cash Receipts Journal'), ('cash_disbursements', 'Cash Disbursements Journal')], max_length=20, verbose_name='Journal Type')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
            ],
            options={
                'verbose_name': 'Journal',
                'verbose_name_plural': 'Journals',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransaction',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('date', models.DateField(verbose_name='Date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('description', models.TextField(verbose_name='Description')),
                ('reference_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Reference Number')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('transfer', 'Transfer'), ('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('expense', 'Expense'), ('income', 'Income')], max_length=50, verbose_name='Transaction Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country_currency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.country')),
                ('credit_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.account')),
                ('debit_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.account')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
                ('status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.status')),
                ('journal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.journal')),
            ],
            options={
                'verbose_name': 'historical transaction',
                'verbose_name_plural': 'historical transactions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('report_type', models.CharField(choices=[('balance_sheet', 'Balance Sheet'), ('income_statement', 'Income Statement'), ('cash_flow_statement', 'Cash Flow Statement'), ('financial_ratios', 'Financial Ratios')], max_length=50, verbose_name='Type')),
                ('date_generated', models.DateField(auto_now_add=True, verbose_name='Date Generated')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference Number')),
                ('period_covered_start', models.DateField(blank=True, null=True, verbose_name='Period Covered (Start)')),
                ('period_covered_end', models.DateField(blank=True, null=True, verbose_name='Period Covered (End)')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('last_updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('header_text', models.TextField(blank=True, null=True, verbose_name='Header Text')),
                ('footer_text', models.TextField(blank=True, null=True, verbose_name='Footer Text')),
                ('income_statement_section', models.TextField(blank=True, null=True, verbose_name='Income Statement Section')),
                ('balance_sheet_section', models.TextField(blank=True, null=True, verbose_name='Balance Sheet Section')),
                ('revenue_field', models.CharField(blank=True, max_length=100, null=True, verbose_name='Revenue Field')),
                ('expenses_field', models.CharField(blank=True, max_length=100, null=True, verbose_name='Expenses Field')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.user', verbose_name='Created By')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBudgetVariance',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('actual_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Actual Amount')),
                ('budgeted_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Budgeted Amount')),
                ('variance', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Variance')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('budget', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.budget', verbose_name='Budget')),
                ('expense_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.expenseitem', verbose_name='Expense Item')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('revenue_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.revenueitem', verbose_name='Revenue Item')),
            ],
            options={
                'verbose_name': 'historical Budget Variance',
                'verbose_name_plural': 'historical Budget Variances',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='BudgetVariance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('actual_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Actual Amount')),
                ('budgeted_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Budgeted Amount')),
                ('variance', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Variance')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.budget', verbose_name='Budget')),
                ('expense_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='financial_management.expenseitem', verbose_name='Expense Item')),
                ('revenue_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='financial_management.revenueitem', verbose_name='Revenue Item')),
            ],
            options={
                'verbose_name': 'Budget Variance',
                'verbose_name_plural': 'Budget Variances',
            },
        ),
        migrations.AddField(
            model_name='budget',
            name='revenue_items',
            field=models.ManyToManyField(blank=True, to='financial_management.revenueitem', verbose_name='Revenue Items'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('date', models.DateField(verbose_name='Date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('description', models.TextField(verbose_name='Description')),
                ('reference_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Reference Number')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('transfer', 'Transfer'), ('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('expense', 'Expense'), ('income', 'Income')], max_length=50, verbose_name='Transaction Type')),
                ('attachments', models.ManyToManyField(blank=True, to='financial_management.attachment', verbose_name='Attachments')),
                ('country_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_country_currenct', to='authentication.country')),
                ('credit_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transactions', to='financial_management.account')),
                ('debit_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_transactions', to='financial_management.account')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='financial_management.journal')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.status')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('debit_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Debit Amount')),
                ('credit_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Credit Amount')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.account')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalLedger',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('debit_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Debit Amount')),
                ('credit_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Credit Amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.account')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='authentication.institution')),
                ('transaction', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='financial_management.transaction')),
            ],
            options={
                'verbose_name': 'historical ledger',
                'verbose_name_plural': 'historical ledgers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Balance')),
                ('debit_balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Debit Balance')),
                ('credit_balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Credit Balance')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.account')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VarianceAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_marker', models.IntegerField(blank=True, help_text='Soft-deletion marker.', null=True, verbose_name='Deletion Marker')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when record was marked as deleted.', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Date and time when record was created.', null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when record was last updated.', null=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('analysis_date', models.DateField(verbose_name='Analysis Date')),
                ('actual_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Actual Amount')),
                ('expected_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Expected Amount')),
                ('variance_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Variance Amount')),
                ('variance_percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Variance Percentage')),
                ('analysis_notes', models.TextField(blank=True, verbose_name='Analysis Notes')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financial_management.budget')),
            ],
            options={
                'verbose_name': 'Variance Analysis',
                'verbose_name_plural': 'Variance Analyses',
            },
        ),
    ]
